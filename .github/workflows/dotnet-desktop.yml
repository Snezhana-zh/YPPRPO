name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
env:
  IMAGE_NAME: "snezhanazh/lagrange"
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
  release:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 18.0.0
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test_and_report_coverage:
    runs-on: ubuntu-latest
    name: dotnet test coverage update
    steps:
      - uses: chill-viking/dotnet-sonar-scanner@v2
        name: Scan and Publish
        with:
          sonar-project-key: 'Snezhana1213_YPPRPO'
          sonar-org-key: 'snezhana1213'
          token: ${{ secrets.GITHUB_TOKEN }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
  # analyze2:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: '8.0.x'
  #     - run: dotnet test --collect:"XPlat Code Coverage" --settings coverlet.runsettings
  #     - run: SonarScanner.MSBuild.exe sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
