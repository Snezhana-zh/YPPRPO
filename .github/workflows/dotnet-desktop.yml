name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
env:
  IMAGE_NAME: "snezhanazh/lagrange"
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
  release:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 18.0.0
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Get current directory
        run: |
          echo "Текущая папка: $(pwd)"
          ls -la
          ls -la ../../
      - name: SonarScanner for .NET 8 with pull request decoration support
        uses: highbyte/sonarscan-dotnet@v2.3.3
        with:
          # The key of the SonarQube project
          sonarProjectKey: Snezhana1213_YPPRPO
          # The name of the SonarQube project
          sonarProjectName:  YPPRPO
          # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
          sonarOrganization: snezhana1213
          # Optional command arguments to dotnet test
          dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          # Optional extra command arguments the the SonarScanner 'begin' command
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
          dotnetBuildArguments: /home/runner/work/YPPRPO/YPPRPO/LagrangeInterpolation.csproj
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  analyze2:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - run: dotnet test --collect:"XPlat Code Coverage" --settings coverlet.runsettings
      - run: SonarScanner.MSBuild.exe sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
